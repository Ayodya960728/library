/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.library.view;

import edu.ijse.library.controller.BookController;
import edu.ijse.library.controller.BorrowingsController;
import edu.ijse.library.controller.MemberController;
import edu.ijse.library.dto.BookDto;
import edu.ijse.library.dto.BorrowingsDto;
import edu.ijse.library.dto.MemberDto;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class BorrowingsView extends javax.swing.JFrame {
    
    private final BookController bookController;
    private final BorrowingsController borrowingsController;
    private BorrowingsDto var;
    private BorrowingsDto dto;
    private Object lblMemeberDetail;

    /**
     * Creates new form BorrowingsView
     */
    
   
    
    public BorrowingsView() throws Exception {
        bookController = new BookController();
        borrowingsController = new BorrowingsController();
        initComponents();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblBookId = new javax.swing.JLabel();
        txtBookId = new javax.swing.JTextField();
        lblMemberId = new javax.swing.JLabel();
        txtMemberId = new javax.swing.JTextField();
        btnSearchMember = new javax.swing.JButton();
        lblMemberDetail = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btnSearchBook = new javax.swing.JButton();
        lblBookDetail = new javax.swing.JLabel();
        lbBorrowDate = new javax.swing.JLabel();
        txtBorrowDate = new javax.swing.JTextField();
        lblReturnDate = new javax.swing.JLabel();
        txtReturnDate = new javax.swing.JTextField();
        lblDueDate = new javax.swing.JLabel();
        txtDueDate = new javax.swing.JTextField();
        lblFine = new javax.swing.JLabel();
        txtFine = new javax.swing.JTextField();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblBorrowings = new javax.swing.JTable();
        btnAproveBorrowings = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Borrowings Management");

        lblBookId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblBookId.setText("Book Id");

        txtBookId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblMemberId.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblMemberId.setText("Member Id");

        txtMemberId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnSearchMember.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearchMember.setText("Search");
        btnSearchMember.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchMemberActionPerformed(evt);
            }
        });

        btnSearchBook.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnSearchBook.setText("Search");
        btnSearchBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchBookActionPerformed(evt);
            }
        });

        lbBorrowDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lbBorrowDate.setText("Borrow_Date");

        txtBorrowDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblReturnDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblReturnDate.setText("Return_Date");

        txtReturnDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblDueDate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblDueDate.setText("Due_Date");

        txtDueDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblFine.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        lblFine.setText("Fine");

        txtFine.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnDelete.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnSave.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        tblBorrowings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblBorrowings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBorrowingsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblBorrowings);

        btnAproveBorrowings.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAproveBorrowings.setText("Aprove Borrowings");
        btnAproveBorrowings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAproveBorrowingsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAproveBorrowings, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(btnSearchBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(lblMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                                            .addComponent(btnSearchMember, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(lblBookDetail, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                                        .addComponent(lblMemberDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 615, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblFine, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 354, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 614, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblBookDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtBookId)
                        .addComponent(btnSearchBook)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMemberId)
                            .addComponent(btnSearchMember))
                        .addGap(11, 11, 11))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblMemberId, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblMemberDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBorrowDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFine, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnSave))
                .addGap(40, 40, 40)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAproveBorrowings)
                .addGap(191, 191, 191))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            saveBorrowings();
        } catch (Exception ex) {
            Logger.getLogger(BorrowingsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            deleteBorrowings();
        } catch (Exception ex) {
            Logger.getLogger(BorrowingsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchBookActionPerformed
        try {
            searchBook();
        } catch (Exception ex) {
            Logger.getLogger(BorrowingsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchBookActionPerformed

    private void btnSearchMemberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchMemberActionPerformed
        try {
            searchMember();
        } catch (Exception ex) {
            Logger.getLogger(BorrowingsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSearchMemberActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            updateBorrowings();
        } catch (Exception ex) {
            Logger.getLogger(BorrowingsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnAproveBorrowingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAproveBorrowingsActionPerformed
        try {
            aproveBorrowings();
        } catch (Exception ex) {
            Logger.getLogger(BorrowingsView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnAproveBorrowingsActionPerformed

    private void tblBorrowingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBorrowingsMouseClicked
       
    }//GEN-LAST:event_tblBorrowingsMouseClicked

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(BorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(BorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(BorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(BorrowingsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new BorrowingsView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAproveBorrowings;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearchBook;
    private javax.swing.JButton btnSearchMember;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lbBorrowDate;
    private javax.swing.JLabel lblBookDetail;
    private javax.swing.JLabel lblBookId;
    private javax.swing.JLabel lblDueDate;
    private javax.swing.JLabel lblFine;
    private javax.swing.JLabel lblMemberDetail;
    private javax.swing.JLabel lblMemberId;
    private javax.swing.JLabel lblReturnDate;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTable tblBorrowings;
    private javax.swing.JTextField txtBookId;
    private javax.swing.JTextField txtBorrowDate;
    private javax.swing.JTextField txtDueDate;
    private javax.swing.JTextField txtFine;
    private javax.swing.JTextField txtMemberId;
    private javax.swing.JTextField txtReturnDate;
    // End of variables declaration//GEN-END:variables

    private void searchBook() throws Exception {
         String bookId = txtBookId.getText();
        BookDto book = bookController.findBook(bookId);
        if (book != null) {
            lblBookDetail.setText("Book Title: " + book.getTitle());
        } else {
            lblBookDetail.setText("Book not found!");
        }
        }
    
    private void searchMember() throws Exception{
        String memberId = txtMemberId.getText();
        MemberDto member = MemberController.findMember(memberId);
        if(member != null){
           lblMemberDetail.setText("Member Name: " + member.getName());
        } else {
             lblMemberDetail.setText("Member not found!");
        }
    }

    private void saveBorrowings() throws Exception {
        try {
            ArrayList<MemberDto> txt = null;
            BorrowingsDto dto;
            dto = new BorrowingsDto(Integer.parseInt(txtBookId.getText()),
                    Integer.parseInt(txtMemberId.getText()),
                    txtBorrowDate.getText(), 
                    txtDueDate.getText(),
                    txtReturnDate.getText(),
                    txtFine.getText(),
                     txt);
            String resp = borrowingsController.save(dto);
            JOptionPane.showMessageDialog(this, resp);
            clearForm();
            loadTable();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error at Save Borrowings");
        }
    }
    
private void clearForm () {
    txtBookId.setText("");
    txtMemberId.setText("");
    txtBorrowDate.setText("");
    txtDueDate.setText("");
    txtReturnDate.setText("");
    txtFine.setText("");
}

private void loadTable() {
   try {
       String columns[] ={"Book Id", "Member Id", "Borrow_Date", "Due_Date", "Return_Date", "Fine"};
       DefaultTableModel dtm = new DefaultTableModel(columns, 0){
           @Override
           public boolean isCellEditable(int row, int column){
               return false;
           }
       };
       tblBorrowings.setModel(dtm);
       
       ArrayList<BorrowingsDto> borrowingsDtos = borrowingsController.getAll();
       
        if (borrowingsDtos != null) {
            for(BorrowingsDto dto : borrowingsDtos) {
           Object[] rowData = {
               dto.getBook_id(),
               dto.getMember_id(),
               dto.getBorrow_date(),
               dto.getDue_date(),
               dto.getReturn_date(),
               dto.getFine()
           };
           dtm.addRow(rowData);
       }
        } else {
            JOptionPane.showMessageDialog(this, "No Borrowings Available");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this,"Error at Loading Data to borrowings Table");
    }
}
    
    private void deleteBorrowings() throws Exception {
        try {
           int bookId = Integer.parseInt(txtBookId.getText());
           String resp = bookController.delete(bookId);
           JOptionPane.showMessageDialog(this, resp); 
           clearForm();
           loadTable();
        }catch (Exception e) {
           JOptionPane.showMessageDialog(this, "Error at Delete Borrowings"); 
        }
    }

    private void updateBorrowings() throws Exception {
        try {
            ArrayList<MemberDto> txt = null;
            BorrowingsDto borrowingsDto = new BorrowingsDto(Integer.parseInt(txtBookId.getText()), 
                    Integer.parseInt(txtMemberId.getText()),
                    txtBorrowDate.getText(),
                    txtDueDate.getText(),
                    txtReturnDate.getText(),
                    txtFine.getText(), 
                    txt);
        } catch (Exception e) {
        }
    }
    
     private void aproveBorrowings() throws Exception {
        String bookId = txtBookId.getText();
        String memberId = txtMemberId.getText();
        borrowingsController.approveBorrowings(bookId, memberId);
        JOptionPane.showMessageDialog(this, "Borrowing approved successfully!", "Success", JOptionPane.INFORMATION_MESSAGE);
        loadBorrowings();
  
   }

    private void loadBorrowings() {
        List<BorrowingsDto> borrowingsList = borrowingsController.getBorrowings();
        DefaultTableModel model = (DefaultTableModel) tblBorrowings.getModel();
        model.setRowCount(0);
        for (BorrowingsDto borrowings : borrowingsList) {
            model.addRow(new Object[]{borrowings.getBookId(), borrowings.getMemberId(), borrowings.getBorrowDate(), borrowings.getDueDate(), borrowings.getReturnDate(), borrowings.getFine()});
        }
    }
}


   
   

   

